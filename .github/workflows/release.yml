name: Release
#TODO arm releases
#TODO enable 32bit linux wheels builds?
#TODO use older manylinux2010 for larger compatibility?

on:
  push:
    tags: 
      - 'v*.*.*' # when tag with name 'vX.Y.Z' is pushed to master
      - '2.1.16-new'
  release: # or when a new Release is created&published in GH web interface
    types: [published]

jobs:
  build-release-gh: # do a release build for GH Releases, C++ binary
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 4
      matrix:
        python-version: ['3.10']
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Versions
      run: |
        python --version
        cmake --version
        c++ --version

    - name: Install gcc-8
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get update
        sudo apt-get -y install gcc-8 g++-8
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 \
                    100 \
                    --slave   /usr/bin/g++ g++ /usr/bin/g++-8 \
                    --slave   /usr/bin/gcov gcov /usr/bin/gcov-8 \
                    --slave   /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 \
                    --slave   /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 \
                    --slave   /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-8 \
                    --slave   /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-8 \
                    --slave   /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-8
        sudo update-alternatives --install /usr/bin/cpp cpp-bin /usr/bin/cpp-8 100

    - name: Install dependencies
      run: |
        python -m pip install -r requirements.txt
        python setup.py configure

    - name: build htmcore with setup.py
      run: python setup.py install --user --force

    - name: C++ & Python Tests
      run: python setup.py test

    - name: Release (make package)
      run: |
        python setup.py bdist_wheel
        cd build/scripts
        cmake --build . --config Release --target install # aka make install ,but multiplatform
        cmake --build . --config Release --target package # make package

    - name: GitHub Release C++ (deploy)
      # from https://github.com/marketplace/actions/gh-release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/scripts/htm_core-v*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/upload-artifact@v2
      with:
        name: "release"
        path: build/Release/distr/dist



  build-wheels:
    # This is a separate job from build-gh-release as CIBW needs to re-build on
    # its platform/image/python. Existing build breaks it. 
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      #max-parallel: 4
      matrix:
        os: [ubuntu-20.04]
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel

    - name: Build wheel
      env:
        # install your project dependencies before building
        CIBW_BEFORE_BUILD: "pip install -r {project}/requirements.txt"
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: "pytest {project}/py/tests {project}/bindings/py/tests"
        # Only build on Python >=3.7 and skip 32-bit builds
        CIBW_BUILD: cp39-* cp310-*
        CIBW_SKIP: "*-win32 cp27-manylinux* *i686*"
        # build using the manylinux2014 image
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_MANYLINUX_I686_IMAGE: manylinux2014
        MACOSX_DEPLOYMENT_TARGET: "10.15" #for C++17 compatibility in OSX, see https://cibuildwheel.readthedocs.io/en/stable/cpp_standards/#macos-and-deployment-target-versions
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - name: Publish wheels to GitHub artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./wheelhouse/*.whl
